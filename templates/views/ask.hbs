<!DOCTYPE html>
<html>
<head>
    <title></title>
    <script src='https://code.responsivevoice.org/responsivevoice.js'></script>
    <meta charset="UTF-8" />
    <link href="https://fonts.googleapis.com/css?family=Josefin+Sans" rel="stylesheet">

    <style>

        html,body 
        {
            padding:0;
            margin:0;
            max-width:100%;
            user-select:none;
            -ms-user-select:none;
            -moz-user-select:none;
            -webkit-user-select:none;
            background-color:#4ec2ae;

        }

        #h{
            Color:#fff;
            Border-radius:5px;
        }

        .shadow{

            -webkit-box-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.14), 0 1px 7px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -1px rgba(0, 0, 0, 0.2);

            box-shadow: 0 3px 3px 0 rgba(0, 0, 0, 0.14), 0 1px 7px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -1px rgba(0, 0, 0, 0.2); 

        }

        .nice-font
        {
            font-family:'Josefin Sans',sans-serif;
        }

        header{
            text-align:center;
        }

        main
        {
            padding:10px;
            margin-bottom:50px;
        }

        footer #command
        {
            position:fixed;
            bottom:0;
            width:50%;
            padding:7px 7px;
            padding-right:7px;
            margin-bottom:5px;
            border-radius:30px;
            border:0.5px solid #9e9e9e50;
            -ms-box-sizing:border-box;
            box-sizing:border-box ;
            background-color:#fff;
            left: 25%;
        }

        #command input
        {
            display:block;
            width:73%;
            float:left;

        }

        #command input,#command button
        {

            padding:10px 15px;
            border:0;
            outline:0;
        }


        button
        {
            background-color:#1e88e5;
            color:#fff;
            border-radius:20px;
            font-weight:300;
            float:right;
        }

        .row
        {
            width:100%;
            margin-bottom:10px;
            display:block;
        }

        .row::after{
            content: "";
            display: table;
            clear: both;
        }

        .chat
        {
            border:0;
            background-color:#fff;
            border-radius:20px;
            color:#111;
            padding:10px 20px;
            display:block  ; 
            margin: 10px ; 
            font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
        }

        .question
        {
            float:right;
            background-color:#1e88e5;
            color:#fff;
        }

        .answer
        {
            float:left;
        }
        .pointer{ 
            curson: pointer; 

        }
        button{
            cursor: pointer;
        }
    </style>
</head>
<body>
    <header>
        <h1 class="nice-font" id="h" >Voyager {{{data}}}</h1>
    </header>

    <main class="nice-font">
        <div class="row" id="careerGuidance">
            
            <!-- Career guidance will be displayed here -->
        </div>
    </main>

    <div id="last"></div>

    <footer>
        <div id="command">
            <input id="questionInput" placeholder="Ask your query here" type="text" />
            <button id="askButton" class="shadow nice-font pointer">âˆ†</button>
        </div>
    </footer>

    <script>
        const element = selector => document.querySelector(selector);

        const generateCareerGuidance = async (interest1, interest2, interest3) => {
            const response = await fetch('/ask', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ question: `Hello Gemini, You will suggest career and give guidance to the student based on the certain question that are asked to the user and are given below. Please only give help related to the career and suggest career action plans: Hobby and activity that i do in my free time is ${interest1},<br>
                 I am passionate about ${interest2} <br>
                 
                 and I like ${interest3}` })
            });

            const data = await response.json();

            // Get the career guidance element
            const careerGuidance = element("#careerGuidance");

            // Set the text content of the career guidance element
            careerGuidance.innerHTML = `
                <div class="chat answer shadow">${data.response}</div>
            `;

            console.log(data);
            window.scrollTo(0, document.body.scrollHeight);
        };

        document.addEventListener("DOMContentLoaded", () => {
            const urlParams = new URLSearchParams(window.location.search);
            const interest1 = urlParams.get('interest1');
            const interest2 = urlParams.get('interest2');
            const interest3 = urlParams.get('interest3');

            if (interest1 && interest2 && interest3) {
                generateCareerGuidance(interest1, interest2, interest3);
            }
            
            // Add event listener to the ask button
            const askButton = element("#askButton");
            const questionInput = element("#questionInput");
            
          askButton.addEventListener("click", async () => {
    const question = questionInput.value.trim();
    if (question) {
        // Clear input field
        questionInput.value = "";
        const chatElement = document.createElement('div');
        chatElement.classList.add('row');
                    
        try {
            // Send the question to the server
            const response = await fetch('/ask', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ question })
            });

            // Handle the response
            if (response.ok) {
                const data = await response.json();
                // Display the response in the chat
                
                
                chatElement.innerHTML = `
                    <div class="chat question shadow">${question}</div>
                    <div class="chat answer shadow">${data.response}</div>
                `;
                careerGuidance.appendChild(chatElement);
                // Scroll to the bottom of the chat
                window.scrollTo(0, document.body.scrollHeight);
            } else {
                console.error('Server response not OK:', response.status);
            }
        } catch (error) {
            console.error('Error sending question to server:', error);
        }
    }
});
        });

        
            // Add event listener to bookmark button
            const bookmarkBtns = chatElement.querySelectorAll('.bookmarkBtn');
bookmarkBtns.forEach(bookmarkBtn => {
    bookmarkBtn.addEventListener('click', async (event) => {
        event.preventDefault();
        event.stopPropagation();

        // Find the closest "answer" element relative to the clicked button
        const answerElement = event.target.closest('.answer');

        const answer = answerElement.textContent;

        // Send message content to the server to be saved as a bookmark
        try {
            const response = await fetch('/api/bookmarks', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ answer })
            });
            if (response.ok) {
                alert('Message added to bookmarks successfully');
            } else {
                alert('Failed to add message to bookmarks');
            }
        } catch (error) {
            console.error('Error:', error);
            alert('Failed to add message to bookmarks');
        }
    });
});

    </script>
</body>
</html>
